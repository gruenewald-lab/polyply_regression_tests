#!/bin/python3
from pathlib import Path
import argparse
import logging
import networkx as nx
import vermouth
from vermouth.log_helpers import (StyleAdapter, BipolarFormatter,
                                  CountingHandler, TypeAdapter,)

from vermouth.gmx.gro import read_gro
from polyply_regression_tests.workflow_utils.matches_geometry import matches_geometry
from polyply.src.topology import Topology

def main():
    """
    Compare two files and see if their content is practically
    the same. Note it currently supports PDB files and itp
    files.
    """

    parser = argparse.ArgumentParser(formatter_class=argparse.ArgumentDefaultsHelpFormatter,)
    parser.add_argument('-p', type=Path, dest="topfile", help="topology file")
    parser.add_argument('-c', type=Path, dest="coordfile", help="coordinate file")
    parser.add_argument('-name', type=str, dest="block_name", help="molecule name")

    args = parser.parse_args()

    topology = Topology.from_gmx_topfile(name=args.block_name, path=args.topfile)
    topology.preprocess()

    molecule = read_gro(args.coordfile)
    coords = nx.get_node_attributes(molecule, "position")

    block = topology.molecules[topology.mol_idx_by_name[args.block_name][0]].molecule
    matches_geometry(block, coords, tolerances={"angles": 5, "bonds": 0.05, "dihedrals": 5})

    return True

if __name__ == '__main__':
    main()
